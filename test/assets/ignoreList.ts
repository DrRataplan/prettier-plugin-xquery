/**
* Automatically generated test report from running prettier over all 31821 test cases in the QT3 tests.
*
* The ignore list contains 86 known failing tests.
* Tests that fail because a comment failed to be printed: 44
* Tests that fail because of a type error: 1
* Tests that fail because the prettified result is not stable: 35
*
* Other failures: 6
*/
export default {
	"fn-contains": {
		"fn-contains-34": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  'fn:contains(\\n' +\n\u001b[39m    '  \"abc-def\",\\n' +\n\u001b[39m    '  \"abcdef\",\\n' +\n\u001b[39m    '  \"http://www.w3.org/2013/collation/UCA?lang=en;alternate=blanked\"\\n' +\n\u001b[32m+\u001b[39m   ')(::)\\n'\n\u001b[31m-\u001b[39m   ') (::)'\n"
	},
	"fn-matches": {
		"fn-matches-50": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  'declare namespace err = \"http://www.w3.org/2005/xqt-errors\";\\n' +\n\u001b[39m    '\\n' +\n\u001b[39m    '<results>{\\n' +\n\u001b[39m    '  for $t in /tests/test\\n' +\n\u001b[39m    '  return try {\\n' +\n\u001b[39m    '      let $matches := matches($t/@input, $t/@regex, string($t/@flags))\\n' +\n\u001b[39m    '      return if (\\n' +\n\u001b[32m+\u001b[39m   '          $matches (:trace($matches, $t/@id):)\\n' +\n\u001b[32m+\u001b[39m   '            and\\n' +\n\u001b[31m-\u001b[39m   '          $matches and (:trace($matches, $t/@id):)\\n' +\n\u001b[39m    '            $t/@result ne \"y\"\\n' +\n\u001b[39m    '        ) then\\n' +\n\u001b[39m    '          <fail>{\\n' +\n\u001b[39m    '            $t\\n' +\n\u001b[39m    '          }</fail>\\n' +\n"
	},
	"fn-unparsed-text": {
		"fn-unparsed-text-054": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  'for $t1 in unparsed-text(\"http://date.jsontest.com\")\\n' +\n\u001b[39m    'return every\\n' +\n\u001b[39m    '    $i in\\n' +\n\u001b[39m    '    1 to 50 satisfies\\n' +\n\u001b[39m    '    (\\n' +\n\u001b[32m+\u001b[39m   '      parse-xml(\"<a><b><c>\" || $i || \"</c></b></a>\")//c(:waste some time:)\\n' +\n\u001b[32m+\u001b[39m   '       and\\n' +\n\u001b[31m-\u001b[39m   '      parse-xml(\"<a><b><c>\" || $i || \"</c></b></a>\")//c and (:waste some time:)\\n' +\n\u001b[39m    '        unparsed-text(\\n' +\n\u001b[39m    '          translate(concat(\"http://date.jsontest.com\", $i), \"0123456789\", \"\")\\n' +\n\u001b[39m    '        ) eq\\n' +\n\u001b[39m    '          $t1\\n' +\n\u001b[39m    '    )'\n"
	},
	"map-size": {
		"map-size-015": "AssertionError [ERR_ASSERTION]: Got unwanted rejection: The second prettification should also work3.\nInput: \n            map:merge(((1 to 20)!map{.: 0}, (10 to 30)!map{.: 0}), map{'duplicates':'combine'}) (:30:)\n            => map:remove((4, 8, 12)) (:27:)\n            => map:put(50, 0) (:28:)\n            => map:put(4, 0) (:29:)\n            => map:put(1, 0) (:29:)\n            => map:size()\n        \nResult of first round: map:merge(\n  ((1 to 20)!map {.: 0}, (10 to 30)!map {.: 0}),\n  map {\"duplicates\": \"combine\"}\n) => (:30:)\n  map:remove((4, 8, 12)) => (:27:)\n  map:put(50, 0) => (:28:)\n  map:put(4, 0) => (:29:)\n  map:put(1, 0) => (:29:)\n  map:size()\nActual message: \"Comment \"(:30:)\" was not printed. Please report this error!\""
	},
	"prod-AxisStep": {
		"K2-Axes-99": "TypeError: Cannot read properties of undefined (reading 'length')"
	},
	"prod-BaseURIDecl": {
		"K-BaseURIProlog-1": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m 'declare (::)\\n' +\n\u001b[32m+\u001b[39m   'base-uri (::)\\n' +\n\u001b[32m+\u001b[39m   '\"http://example.com/declareBaseURITest\";\\n' +\n\u001b[31m-\u001b[39m 'declare base-uri \"http://example.com/declareBaseURITest\"; (::) (::)\\n' +\n\u001b[39m    '\\n' +\n\u001b[39m    'static-base-uri() eq \"http://example.com/declareBaseURITest\"'\n",
		"K-BaseURIProlog-2": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m 'declare (::)\\n' +\n\u001b[32m+\u001b[39m   'base-uri (::)\\n' +\n\u001b[32m+\u001b[39m   '\"http://example.com/declareBaseURITest\";\\n' +\n\u001b[32m+\u001b[39m   'declare (::)\\n' +\n\u001b[32m+\u001b[39m   'base-uri (::)\\n' +\n\u001b[32m+\u001b[39m   '\"http://example.com/declareBaseURITest2\";\\n' +\n\u001b[31m-\u001b[39m 'declare base-uri \"http://example.com/declareBaseURITest\"; (::) (::)\\n' +\n\u001b[31m-\u001b[39m   'declare base-uri \"http://example.com/declareBaseURITest2\"; (::) (::)\\n' +\n\u001b[39m    '\\n' +\n\u001b[39m    '1 eq 1'\n",
		"K-BaseURIProlog-3": "Error: Comment \"(::)\" was not printed. Please report this error!"
	},
	"prod-BoundarySpaceDecl": {
		"K-BoundarySpaceProlog-1": "Error: Comment \"(::)\" was not printed. Please report this error!",
		"K-BoundarySpaceProlog-2": "Error: Comment \"(::)\" was not printed. Please report this error!",
		"K-BoundarySpaceProlog-3": "Error: Comment \"(::)\" was not printed. Please report this error!"
	},
	"prod-Comment": {
		"XQueryComment012": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(: Name: XQueryComment012 :)\\n' +\n\u001b[39m    '(: Description: Comments that looks like a function call :)\\n' +\n\u001b[39m    '\\n' +\n\u001b[32m+\u001b[39m   '/south (: test :)'\n\u001b[31m-\u001b[39m   '/south(: test :)\\n'\n",
		"XQueryComment014": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(: Name: XQueryComment014 :)\\n' +\n\u001b[39m    '(: Description: Comments inside a cast expression :)\\n' +\n\u001b[39m    '\\n' +\n\u001b[32m+\u001b[39m   '\"10\" cast as (: type comment :)\\n' +\n\u001b[32m+\u001b[39m   'xs:integer?'\n\u001b[31m-\u001b[39m   '\"10\" cast as xs:integer? (: type comment :)'\n",
		"K-XQueryComment-1": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K-XQueryComment-1                               :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:22+01:00                       :)\\n' +\n\u001b[39m    '(: Purpose: A test whose essence is: `(3(: comment inbetween :)- 1) eq 2`. :)\\n' +\n\u001b[39m    '(:*******************************************************:)\\n' +\n\u001b[39m    '(\\n' +\n\u001b[32m+\u001b[39m   '  3 (: comment inbetween :)\\n' +\n\u001b[32m+\u001b[39m   '    -\\n' +\n\u001b[31m-\u001b[39m   '  3 - (: comment inbetween :)\\n' +\n\u001b[39m    '    1\\n' +\n\u001b[39m    ') eq\\n' +\n\u001b[39m    '  2'\n",
		"K-XQueryComment-2": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K-XQueryComment-2                               :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:22+01:00                       :)\\n' +\n\u001b[39m    '(: Purpose: A test whose essence is: `1 (: a (: nested :) comment :) eq 1`. :)\\n' +\n\u001b[39m    '(:*******************************************************:)\\n' +\n\u001b[32m+\u001b[39m   '1 (: a (: nested :) comment :)\\n' +\n\u001b[32m+\u001b[39m   '  eq\\n' +\n\u001b[31m-\u001b[39m   '1 eq (: a (: nested :) comment :)\\n' +\n\u001b[39m    '  1'\n",
		"K-XQueryComment-3": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K-XQueryComment-3                               :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:22+01:00                       :)\\n' +\n\u001b[39m    '(: Purpose: A test whose essence is: `1 (: comment (: inside :) comment :) eq 1`. :)\\n' +\n\u001b[39m    '(:*******************************************************:)\\n' +\n\u001b[32m+\u001b[39m   '1 (: comment (: inside :) comment :)\\n' +\n\u001b[32m+\u001b[39m   '  eq\\n' +\n\u001b[31m-\u001b[39m   '1 eq (: comment (: inside :) comment :)\\n' +\n\u001b[39m    '  1'\n",
		"K-XQueryComment-5": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K-XQueryComment-5                               :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:22+01:00                       :)\\n' +\n\u001b[39m    '(: Purpose: A test whose essence is: `5 instance (: strange place for a comment :) of item()`. :)\\n' +\n\u001b[39m    '(:*******************************************************:)\\n' +\n\u001b[32m+\u001b[39m   '5 instance (: strange place for a comment :)\\n' +\n\u001b[32m+\u001b[39m   'of item()'\n\u001b[31m-\u001b[39m   '5 instance of item() (: strange place for a comment :)'\n",
		"K-XQueryComment-6": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K-XQueryComment-6                               :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:22+01:00                       :)\\n' +\n\u001b[39m    '(: Purpose: A test whose essence is: `1 (: simple comment :) eq 1`. :)\\n' +\n\u001b[39m    '(:*******************************************************:)\\n' +\n\u001b[32m+\u001b[39m   '1 (: simple comment :)\\n' +\n\u001b[32m+\u001b[39m   '  eq\\n' +\n\u001b[31m-\u001b[39m   '1 eq (: simple comment :)\\n' +\n\u001b[39m    '  1'\n",
		"K-XQueryComment-11": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K-XQueryComment-11                              :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:22+01:00                       :)\\n' +\n\u001b[39m    \"(: Purpose: An empty comment after a function's paranteses. :)\\n\" +\n\u001b[39m    '(:*******************************************************:)\\n' +\n\u001b[32m+\u001b[39m   'true()(::)\\n'\n\u001b[31m-\u001b[39m   'true() (::)'\n",
		"K-XQueryComment-12": "AssertionError [ERR_ASSERTION]: Got unwanted rejection: The second prettification should also work3.\nInput: (:*******************************************************:)\n(: Test: K-XQueryComment-12                              :)\n(: Written by: Frans Englich                             :)\n(: Date: 2007-11-22T11:31:22+01:00                       :)\n(: Purpose: A for loop with a comment inbetween.         :)\n(:*******************************************************:)\nfor (: set up loop :) $i in 3 return $i eq 3\nResult of first round: (:*******************************************************:)\n(: Test: K-XQueryComment-12                              :)\n(: Written by: Frans Englich                             :)\n(: Date: 2007-11-22T11:31:22+01:00                       :)\n(: Purpose: A for loop with a comment inbetween.         :)\n(:*******************************************************:)\nfor (: set up loop :)\n  $i in 3\nreturn $i eq 3\nActual message: \"Comment \"(: set up loop :)\" was not printed. Please report this error!\"",
		"K-XQueryComment-17": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K-XQueryComment-17                              :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:22+01:00                       :)\\n' +\n\u001b[39m    '(: Purpose: Colons and paranteses appearing freely in comment content. :)\\n' +\n\u001b[39m    '(:*******************************************************:)\\n' +\n\u001b[32m+\u001b[39m   '1 (: ((( : )) ))ladl:  :(): ()()(dahsi ()()( dad: ) :)\\n' +\n\u001b[32m+\u001b[39m   '  eq\\n' +\n\u001b[31m-\u001b[39m   '1 eq (: ((( : )) ))ladl:  :(): ()()(dahsi ()()( dad: ) :)\\n' +\n\u001b[39m    '  1'\n",
		"K-XQueryComment-19": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K-XQueryComment-19                              :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:22+01:00                       :)\\n' +\n\u001b[39m    '(: Purpose: A test stressing many nested comments.       :)\\n' +\n\u001b[39m    '(:*******************************************************:)\\n' +\n\u001b[32m+\u001b[39m   '1 (:(:(:(:(:(:(:(::):):):):):):):)\\n' +\n\u001b[32m+\u001b[39m   '  eq\\n' +\n\u001b[31m-\u001b[39m   '1 eq (:(:(:(:(:(:(:(::):):):):):):):)\\n' +\n\u001b[39m    '  1'\n",
		"K2-XQueryComment-3": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n... Skipped lines\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K2-XQueryComment-3                              :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:21+01:00                       :)\\n' +\n\u001b[39m    '(: Purpose: Have a computed comment constructor as a last step. :)\\n' +\n\u001b[34m...\u001b[39m\n\u001b[39m    '                                        </e>\\n' +\n\u001b[32m+\u001b[39m   'return $i/b/comment (: some : content (:some content:):)\\n' +\n\u001b[32m+\u001b[39m   '  {\\n' +\n\u001b[31m-\u001b[39m   'return $i/b/comment { (: some : content (:some content:):)\\n' +\n\u001b[39m    '    \"content\"\\n' +\n\u001b[39m    '  }'\n",
		"K2-XQueryComment-4": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n... Skipped lines\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K2-XQueryComment-4                              :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:21+01:00                       :)\\n' +\n\u001b[39m    '(: Purpose: Have a direct comment constructor as a last step. :)\\n' +\n\u001b[34m...\u001b[39m\n\u001b[39m    '                                        </e>\\n' +\n\u001b[32m+\u001b[39m   'return $i/(: some : content (:some content:):)\\n' +\n\u001b[32m+\u001b[39m   '  <!--content-->'\n\u001b[31m-\u001b[39m   'return $i/<!--content--> (: some : content (:some content:):)'\n",
		"K2-XQueryComment-5": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n... Skipped lines\n\n\u001b[39m  '(:*******************************************************:)\\n' +\n\u001b[39m    '(: Test: K2-XQueryComment-5                              :)\\n' +\n\u001b[39m    '(: Written by: Frans Englich                             :)\\n' +\n\u001b[39m    '(: Date: 2007-11-22T11:31:21+01:00                       :)\\n' +\n\u001b[39m    '(: Purpose: Have a direct comment constructor as a last step(#2). :)\\n' +\n\u001b[34m...\u001b[39m\n\u001b[39m    '                                        </e>\\n' +\n\u001b[32m+\u001b[39m   'return $i/b/(: some : content (:some content:):)\\n' +\n\u001b[32m+\u001b[39m   '  <!--content-->'\n\u001b[31m-\u001b[39m   'return $i/b/<!--content--> (: some : content (:some content:):)'\n"
	},
	"prod-ConstructionDecl": {
		"K-ConstructionProlog-1": "Error: Comment \"(::)\" was not printed. Please report this error!",
		"K-ConstructionProlog-3": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32mactual\u001b[39m \u001b[31mexpected\u001b[39m\n\n\u001b[39m'\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mc\u001b[39m\u001b[39ml\u001b[39m\u001b[39ma\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39mc\u001b[39m\u001b[39mo\u001b[39m\u001b[39mn\u001b[39m\u001b[39ms\u001b[39m\u001b[39mt\u001b[39m\u001b[39mr\u001b[39m\u001b[39mu\u001b[39m\u001b[39mc\u001b[39m\u001b[39mt\u001b[39m\u001b[39mi\u001b[39m\u001b[39mo\u001b[39m\u001b[39mn\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39ms\u001b[39m\u001b[39mt\u001b[39m\u001b[39mr\u001b[39m\u001b[39mi\u001b[39m\u001b[39mp\u001b[39m\u001b[39m;\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m(\u001b[39m\u001b[39m:\u001b[39m\u001b[39m:\u001b[39m\u001b[39m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m1\u001b[39m\u001b[39m \u001b[39m\u001b[31me\u001b[39m\u001b[31mq\u001b[39m\u001b[31m \u001b[39m\u001b[39m(\u001b[39m\u001b[39m:\u001b[39m\u001b[39m:\u001b[39m\u001b[39m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m \u001b[39m\u001b[39m \u001b[39m\u001b[32me\u001b[39m\u001b[32mq\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[32m \u001b[39m\u001b[32m \u001b[39m\u001b[39m(\u001b[39m\u001b[39m:\u001b[39m\u001b[39m:\u001b[39m\u001b[39m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m \u001b[39m\u001b[39m \u001b[39m\u001b[39m1\u001b[39m\u001b[39m'\u001b[39m\n",
		"K-ConstructionProlog-4": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m 'declare (::)\\n' +\n\u001b[32m+\u001b[39m   'construction (::)\\n' +\n\u001b[32m+\u001b[39m   'strip;\\n' +\n\u001b[32m+\u001b[39m   'declare (::)\\n' +\n\u001b[32m+\u001b[39m   'construction (::)\\n' +\n\u001b[32m+\u001b[39m   'strip;\\n' +\n\u001b[31m-\u001b[39m 'declare construction strip; (::) (::)\\n' +\n\u001b[31m-\u001b[39m   'declare construction strip; (::) (::)\\n' +\n\u001b[39m    '\\n' +\n\u001b[32m+\u001b[39m   '1 (::)\\n' +\n\u001b[32m+\u001b[39m   '  eq\\n' +\n\u001b[31m-\u001b[39m   '1 eq (::)\\n' +\n\u001b[39m    '  (::)\\n' +\n\u001b[39m    '  1'\n"
	},
	"prod-DefaultNamespaceDecl": {
		"K-DefaultNamespaceProlog-1": "Error: Comment \"(:..:)\" was not printed. Please report this error!",
		"K-DefaultNamespaceProlog-2": "Error: Comment \"(:..:)\" was not printed. Please report this error!",
		"K-DefaultNamespaceProlog-3": "Error: Comment \"(:..:)\" was not printed. Please report this error!",
		"K-DefaultNamespaceProlog-4": "Error: Comment \"(:..:)\" was not printed. Please report this error!",
		"K-DefaultNamespaceProlog-5": "Error: Comment \"(:..:)\" was not printed. Please report this error!"
	},
	"prod-DirAttributeList": {
		"Constr-attr-enclexpr-12": "Error: Comment \"(:comment:)\" was not printed. Please report this error!"
	},
	"prod-DirElemContent": {
		"Constr-cont-document-3": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n... Skipped lines\n\n\u001b[39m  'declare variable $codepoints := (\\n' +\n\u001b[39m    '  9, 10, 13, 32 to 55295, 57344 to 65532, 65536 to 1114111\\n' +\n\u001b[39m    ');\\n' +\n\u001b[39m    '\\n' +\n\u001b[39m    'declare variable $count := count($codepoints);\\n' +\n\u001b[34m...\u001b[39m\n\u001b[39m    '  codepoints-to-string($codepoints)\\n' +\n\u001b[32m+\u001b[39m   '}</r></allCodepoints>(:<allCodepoints>{ \\n' +\n\u001b[31m-\u001b[39m   '}</r></allCodepoints> (:<allCodepoints>{ \\n' +\n\u001b[39m    '            for $i in (1 to $count idiv $lineWidth) \\n' +\n\u001b[39m    '            let $startOffset := (($i - 1) * $lineWidth) + 1 \\n' +\n\u001b[39m    '            return (<r s=\"{$codepoints[$startOffset]}\" e=\"{$codepoints[$startOffset] + $lineWidth}\"> { \\n' +\n\u001b[39m    '                codepoints-to-string(subsequence($codepoints, $startOffset, $lineWidth)) } </r>, \"&#xA;\") \\n' +\n\u001b[32m+\u001b[39m   '                } </allCodepoints>:)\\n'\n\u001b[31m-\u001b[39m   '                } </allCodepoints>:)'\n",
		"K2-DirectConElemContent-26b": "Error: Comment \"(:comment:)\" was not printed. Please report this error!"
	},
	"prod-EmptyOrderDecl": {
		"K-EmptyOrderProlog-1": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32mactual\u001b[39m \u001b[31mexpected\u001b[39m\n\n\u001b[39m'\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mc\u001b[39m\u001b[39ml\u001b[39m\u001b[39ma\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mf\u001b[39m\u001b[39ma\u001b[39m\u001b[39mu\u001b[39m\u001b[39ml\u001b[39m\u001b[39mt\u001b[39m\u001b[39m \u001b[39m\u001b[39mo\u001b[39m\u001b[39mr\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39m \u001b[39m\u001b[39me\u001b[39m\u001b[39mm\u001b[39m\u001b[39mp\u001b[39m\u001b[39mt\u001b[39m\u001b[39my\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39mg\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39ma\u001b[39m\u001b[39mt\u001b[39m\u001b[39me\u001b[39m\u001b[39ms\u001b[39m\u001b[39mt\u001b[39m\u001b[39m;\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m1\u001b[39m\u001b[39m \u001b[39m\u001b[39me\u001b[39m\u001b[39mq\u001b[39m\u001b[39m \u001b[39m\u001b[39m1\u001b[39m\u001b[39m'\u001b[39m\n",
		"K-EmptyOrderProlog-2": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32mactual\u001b[39m \u001b[31mexpected\u001b[39m\n\n\u001b[39m'\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mc\u001b[39m\u001b[39ml\u001b[39m\u001b[39ma\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mf\u001b[39m\u001b[39ma\u001b[39m\u001b[39mu\u001b[39m\u001b[39ml\u001b[39m\u001b[39mt\u001b[39m\u001b[39m \u001b[39m\u001b[39mo\u001b[39m\u001b[39mr\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39m \u001b[39m\u001b[39me\u001b[39m\u001b[39mm\u001b[39m\u001b[39mp\u001b[39m\u001b[39mt\u001b[39m\u001b[39my\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39ml\u001b[39m\u001b[39me\u001b[39m\u001b[39ma\u001b[39m\u001b[39ms\u001b[39m\u001b[39mt\u001b[39m\u001b[39m;\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m1\u001b[39m\u001b[39m \u001b[39m\u001b[39me\u001b[39m\u001b[39mq\u001b[39m\u001b[39m \u001b[39m\u001b[39m1\u001b[39m\u001b[39m'\u001b[39m\n",
		"K-EmptyOrderProlog-3": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m 'declare (::)\\n' +\n\u001b[32m+\u001b[39m   'default order empty (::)\\n' +\n\u001b[32m+\u001b[39m   'greatest;\\n' +\n\u001b[32m+\u001b[39m   'declare (::)\\n' +\n\u001b[32m+\u001b[39m   'default order empty (::)\\n' +\n\u001b[32m+\u001b[39m   'least;\\n' +\n\u001b[31m-\u001b[39m 'declare default order empty greatest; (::) (::)\\n' +\n\u001b[31m-\u001b[39m   'declare default order empty least; (::) (::)\\n' +\n\u001b[39m    '\\n' +\n\u001b[39m    '1 eq 1'\n"
	},
	"prod-ExtensionExpr": {
		"K-ExtensionExpression-8": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  'declare namespace prefix = \"http://example.com/NotRecognized\";\\n' +\n\u001b[39m    '\\n' +\n\u001b[39m    '(::)\\n' +\n\u001b[32m+\u001b[39m   '1 (::)\\n' +\n\u001b[32m+\u001b[39m   '  eq\\n' +\n\u001b[31m-\u001b[39m   '1 eq (::)\\n' +\n\u001b[39m    '  (::)\\n' +\n\u001b[39m    '  (#prefix:name ##cont## # # ( \"# ) #\\n' +\n\u001b[32m+\u001b[39m   '\\t\\t)# )#ent #){(::) (::)\\n' +\n\u001b[32m+\u001b[39m   '  1}(::) (::)\\n'\n\u001b[31m-\u001b[39m   '\\t\\t)# )#ent #){1} (::) (::) (::) (::)'\n"
	},
	"prod-FunctionCall": {
		"FunctionCall-046": "Error: Comment \"(: there's nothing here :)\" was not printed. Please report this error!",
		"FunctionCall-047": "Error: Comment \"(: there's nothing here :)\" was not printed. Please report this error!",
		"FunctionCall-048": "Error: Comment \"(: there's nothing here :)\" was not printed. Please report this error!",
		"FunctionCall-055": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  'declare function local:product($s as xs:double+) as xs:double {\\n' +\n\u001b[39m    '  if (not($s[2])) then\\n' +\n\u001b[39m    '    $s[1]\\n' +\n\u001b[39m    '  else\\n' +\n\u001b[39m    '    $s[1] * local:product($s[position() > 1])\\n' +\n\u001b[39m    '};\\n' +\n\u001b[39m    '\\n' +\n\u001b[32m+\u001b[39m   `local:product((1, \"2\", 3)) (: '2' is not xs:double, error should be raised :)`\n\u001b[31m-\u001b[39m   `local:product((1, \"2\", 3))(: '2' is not xs:double, error should be raised :)\\n`\n"
	},
	"prod-FunctionDecl": {
		"function-declaration-029": "Error: Comment \"(:there is nothing here:)\" was not printed. Please report this error!",
		"function-declaration-030": "Error: Comment \"(:there is nothing here:)\" was not printed. Please report this error!"
	},
	"prod-GroupByClause": {
		"group-009": "AssertionError [ERR_ASSERTION]: Got unwanted rejection: The second prettification should also work3.\nInput: \n        <out>{ \n            for $x in //employee \n            let $key := $x/empnum \n            group by $key collation \"http://www.w3.org/2005/xpath-functions/collation/codepoint\" \n            order by $key \n            return <group count=\"{count($x)}\" key=\"{$key}\"> {string-join($x/pnum, '|')} </group> \n        }</out>\n      \nResult of first round: <out>{\n  for $x in //employee\n  let $key := $x/empnum\n  group by $keycollation\"http://www.w3.org/2005/xpath-functions/collation/codepoint\"\n  order by $key\n  return <group count=\"{\n      count($x)\n    }\" key=\"{\n      $key\n    }\"> {\n      string-join($x/pnum, \"|\")\n    } </group>\n}</out>\nActual message: \"lexical analysis failed\nwhile expecting [S, '(:', ',', ':=', 'as', 'collation', 'count', 'for', 'group', 'let', 'order', 'return', 'stable', 'where']\nat line 4, column 25:\n...\"http://www.w3.org/2005/xpath-functions/collation/codepoint\"\n  o... (4:24)\"",
		"group-009a": "AssertionError [ERR_ASSERTION]: Got unwanted rejection: The second prettification should also work3.\nInput: \n        <out>{ \n            for $x in //employee \n            group by $key := $x/empnum collation \"http://www.w3.org/2005/xpath-functions/collation/codepoint\" \n            order by $key \n            return <group count=\"{count($x)}\" key=\"{$key}\"> {string-join($x/pnum, '|')} </group> \n        }</out>\n      \nResult of first round: <out>{\n  for $x in //employee\n  group by $key:=\n      $x/empnumcollation\"http://www.w3.org/2005/xpath-functions/collation/codepoint\"\n  order by $key\n  return <group count=\"{\n      count($x)\n    }\" key=\"{\n      $key\n    }\"> {\n      string-join($x/pnum, \"|\")\n    } </group>\n}</out>\nActual message: \"lexical analysis failed\nwhile expecting [S, EOF, '!', '!=', '#', '(', '(:', ')', '*', '+', ',', '-', '/', '//', ':', ';', '<', '<<', '<=', '=', '=>', '>', '>=', '>>', '[', ']', 'and', 'ascending', 'case', 'cast', 'castable', 'collation', 'count', 'default', 'descending', 'div', 'else', 'empty', 'end', 'eq', 'except', 'for', 'ge', 'group', 'gt', 'idiv', 'instance', 'intersect', 'is', 'le', 'let', 'lt', 'mod', 'ne', 'only', 'or', 'order', 'return', 'satisfies', 'stable', 'start', 'to', 'treat', 'union', 'where', '|', '||', '}', '}`']\nat line 4, column 25:\n...\"http://www.w3.org/2005/xpath-functions/collation/codepoint\"\n  o... (4:24)\""
	},
	"prod-Lookup": {
		"Lookup-044": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[39m  '(\\n' +\n\u001b[39m    '  map {\"a-1\": 1, \"b-1\": 2, \"c-1\": 3}, map {\"a-1\": 2, \"b-1\": 3, \"c-1\": 4}\\n' +\n\u001b[32m+\u001b[39m   ')[.?(:confusing.?:)\\n' +\n\u001b[32m+\u001b[39m   'b-1 eq\\n' +\n\u001b[31m-\u001b[39m   ')[.?b-1 eq (:confusing.?:)\\n' +\n\u001b[39m    '  3]'\n",
		"Lookup-144": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m '(\\n' +\n\u001b[32m+\u001b[39m   '  map {\"a-1\": 1, \"b-1\": 2, \"c-1\": 3}, map {\"a-1\": 2, \"b-1\": 3, \"c-1\": 4}\\n' +\n\u001b[32m+\u001b[39m   ')?(:confusing.?:)\\n' +\n\u001b[32m+\u001b[39m   'b-1'\n\u001b[31m-\u001b[39m '(map {\"a-1\": 1, \"b-1\": 2, \"c-1\": 3}, map {\"a-1\": 2, \"b-1\": 3, \"c-1\": 4})?b-1 (:confusing.?:)'\n"
	},
	"prod-ModuleImport": {
		"K-ModuleImport-1": "Error: Comment \"(::)\" was not printed. Please report this error!",
		"K-ModuleImport-2": "Error: Comment \"(::)\" was not printed. Please report this error!"
	},
	"prod-NamespaceDecl": {
		"K-NamespaceProlog-1": "Error: Comment \"(::)\" was not printed. Please report this error!",
		"K-NamespaceProlog-2": "Error: Comment \"(::)\" was not printed. Please report this error!"
	},
	"prod-OptionDecl": {
		"K-OptionDeclarationProlog-2": "Error: Comment \"(::)\" was not printed. Please report this error!",
		"K-OptionDeclarationProlog-3": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32mactual\u001b[39m \u001b[31mexpected\u001b[39m\n\n\u001b[39m'\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mc\u001b[39m\u001b[39ml\u001b[39m\u001b[39ma\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39mo\u001b[39m\u001b[39mp\u001b[39m\u001b[39mt\u001b[39m\u001b[39mi\u001b[39m\u001b[39mo\u001b[39m\u001b[39mn\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39ml\u001b[39m\u001b[39mo\u001b[39m\u001b[39mc\u001b[39m\u001b[39ma\u001b[39m\u001b[39ml\u001b[39m\u001b[39m:\u001b[39m\u001b[39mo\u001b[39m\u001b[39mp\u001b[39m\u001b[39mt\u001b[39m\u001b[39m \u001b[39m\u001b[39m\"\u001b[39m\u001b[39mo\u001b[39m\u001b[39mp\u001b[39m\u001b[39mt\u001b[39m\u001b[39mi\u001b[39m\u001b[39mo\u001b[39m\u001b[39mn\u001b[39m\u001b[39m \u001b[39m\u001b[39mv\u001b[39m\u001b[39ma\u001b[39m\u001b[39ml\u001b[39m\u001b[39mu\u001b[39m\u001b[39me\u001b[39m\u001b[39m\"\u001b[39m\u001b[39m;\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m1\u001b[39m\u001b[39m \u001b[39m\u001b[39me\u001b[39m\u001b[39mq\u001b[39m\u001b[39m \u001b[39m\u001b[39m1\u001b[39m\u001b[39m'\u001b[39m\n",
		"K-OptionDeclarationProlog-4": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32mactual\u001b[39m \u001b[31mexpected\u001b[39m\n\n\u001b[39m'\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mc\u001b[39m\u001b[39ml\u001b[39m\u001b[39ma\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39mo\u001b[39m\u001b[39mp\u001b[39m\u001b[39mt\u001b[39m\u001b[39mi\u001b[39m\u001b[39mo\u001b[39m\u001b[39mn\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39ml\u001b[39m\u001b[39mo\u001b[39m\u001b[39mc\u001b[39m\u001b[39ma\u001b[39m\u001b[39ml\u001b[39m\u001b[39m:\u001b[39m\u001b[39mo\u001b[39m\u001b[39mp\u001b[39m\u001b[39mt\u001b[39m\u001b[39m \u001b[39m\u001b[39m\"\u001b[39m\u001b[39mo\u001b[39m\u001b[39mp\u001b[39m\u001b[39mt\u001b[39m\u001b[39mi\u001b[39m\u001b[39mo\u001b[39m\u001b[39mn\u001b[39m\u001b[39m \u001b[39m\u001b[39mv\u001b[39m\u001b[39ma\u001b[39m\u001b[39ml\u001b[39m\u001b[39mu\u001b[39m\u001b[39me\u001b[39m\u001b[39m\"\u001b[39m\u001b[39m;\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m1\u001b[39m\u001b[39m \u001b[39m\u001b[39me\u001b[39m\u001b[39mq\u001b[39m\u001b[39m \u001b[39m\u001b[39m1\u001b[39m\u001b[39m'\u001b[39m\n"
	},
	"prod-OrderingModeDecl": {
		"K-DefaultOrderingProlog-1": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32mactual\u001b[39m \u001b[31mexpected\u001b[39m\n\n\u001b[39m'\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mc\u001b[39m\u001b[39ml\u001b[39m\u001b[39ma\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39mo\u001b[39m\u001b[39mr\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39mi\u001b[39m\u001b[39mn\u001b[39m\u001b[39mg\u001b[39m\u001b[39m \u001b[39m\u001b[39mo\u001b[39m\u001b[39mr\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39md\u001b[39m\u001b[39m;\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m1\u001b[39m\u001b[39m \u001b[39m\u001b[39me\u001b[39m\u001b[39mq\u001b[39m\u001b[39m \u001b[39m\u001b[39m1\u001b[39m\u001b[39m'\u001b[39m\n",
		"K-DefaultOrderingProlog-2": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32mactual\u001b[39m \u001b[31mexpected\u001b[39m\n\n\u001b[39m'\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mc\u001b[39m\u001b[39ml\u001b[39m\u001b[39ma\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39mo\u001b[39m\u001b[39mr\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39mi\u001b[39m\u001b[39mn\u001b[39m\u001b[39mg\u001b[39m\u001b[39m \u001b[39m\u001b[39mu\u001b[39m\u001b[39mn\u001b[39m\u001b[39mo\u001b[39m\u001b[39mr\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39md\u001b[39m\u001b[39m;\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m1\u001b[39m\u001b[39m \u001b[39m\u001b[39me\u001b[39m\u001b[39mq\u001b[39m\u001b[39m \u001b[39m\u001b[39m1\u001b[39m\u001b[39m'\u001b[39m\n",
		"K-DefaultOrderingProlog-3": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32mactual\u001b[39m \u001b[31mexpected\u001b[39m\n\n\u001b[39m'\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mc\u001b[39m\u001b[39ml\u001b[39m\u001b[39ma\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39mo\u001b[39m\u001b[39mr\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39mi\u001b[39m\u001b[39mn\u001b[39m\u001b[39mg\u001b[39m\u001b[39m \u001b[39m\u001b[39mu\u001b[39m\u001b[39mn\u001b[39m\u001b[39mo\u001b[39m\u001b[39mr\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39md\u001b[39m\u001b[39m;\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mc\u001b[39m\u001b[39ml\u001b[39m\u001b[39ma\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39m \u001b[39m\u001b[32m(\u001b[39m\u001b[32m:\u001b[39m\u001b[32m:\u001b[39m\u001b[32m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[39mo\u001b[39m\u001b[39mr\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39mi\u001b[39m\u001b[39mn\u001b[39m\u001b[39mg\u001b[39m\u001b[39m \u001b[39m\u001b[39mo\u001b[39m\u001b[39mr\u001b[39m\u001b[39md\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39md\u001b[39m\u001b[39m;\u001b[39m\u001b[31m \u001b[39m\u001b[31m(\u001b[39m\u001b[31m:\u001b[39m\u001b[31m:\u001b[39m\u001b[31m)\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m\\\u001b[39m\u001b[39mn\u001b[39m\u001b[39m1\u001b[39m\u001b[39m \u001b[39m\u001b[39me\u001b[39m\u001b[39mq\u001b[39m\u001b[39m \u001b[39m\u001b[39m1\u001b[39m\u001b[39m'\u001b[39m\n"
	},
	"prod-SchemaImport": {
		"qischema008": "Error: Comment \"(: at \"qischema008.xsd\" :)\" was not printed. Please report this error!",
		"qischema040": "Error: Comment \"(:at \"xmod040a.xq\":)\" was not printed. Please report this error!",
		"qischema040a": "Error: Comment \"(:at \"xmod040a.xq\":)\" was not printed. Please report this error!",
		"qischema043": "Error: Comment \"(:at \"xmod043a.xq\" :)\" was not printed. Please report this error!",
		"qischema044": "Error: Comment \"(:at \"xmod040a.xq\" :)\" was not printed. Please report this error!",
		"qischema061": "Error: Comment \"(:at \"qischema061.xsd\":)\" was not printed. Please report this error!",
		"qischema063q02-err": "Error: Comment \"(: at \"qischema063.xsd\" :)\" was not printed. Please report this error!",
		"qischema070": "Error: Comment \"(:at \"mini-fpml.xsd\" :)\" was not printed. Please report this error!",
		"qischema90631-err": "Error: Comment \"(:at \"qischema063.xsd\":)\" was not printed. Please report this error!"
	},
	"prod-StringConstructor": {
		"string-constructor-025": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32mactual\u001b[39m \u001b[31mexpected\u001b[39m\n\n\u001b[39m'\u001b[39m\u001b[39m`\u001b[39m\u001b[39m`\u001b[39m\u001b[39m[\u001b[39m\u001b[39m`\u001b[39m\u001b[39m \u001b[39m\u001b[39m*\u001b[39m\u001b[39m`\u001b[39m\u001b[39m{\u001b[39m\u001b[31m}\u001b[39m\u001b[31m`\u001b[39m\u001b[31m*\u001b[39m\u001b[31m \u001b[39m\u001b[31m`\u001b[39m\u001b[31m]\u001b[39m\u001b[31m`\u001b[39m\u001b[31m`\u001b[39m\u001b[31m \u001b[39m\u001b[39m(\u001b[39m\u001b[39m:\u001b[39m\u001b[39mN\u001b[39m\u001b[39mo\u001b[39m\u001b[39mt\u001b[39m\u001b[39mh\u001b[39m\u001b[39mi\u001b[39m\u001b[39mn\u001b[39m\u001b[39mg\u001b[39m\u001b[39m \u001b[39m\u001b[39mh\u001b[39m\u001b[39me\u001b[39m\u001b[39mr\u001b[39m\u001b[39me\u001b[39m\u001b[39m:\u001b[39m\u001b[39m)\u001b[39m\u001b[32m\\\u001b[39m\u001b[32mn\u001b[39m\u001b[32m}\u001b[39m\u001b[32m`\u001b[39m\u001b[32m*\u001b[39m\u001b[32m \u001b[39m\u001b[32m`\u001b[39m\u001b[32m]\u001b[39m\u001b[32m`\u001b[39m\u001b[32m`\u001b[39m\u001b[39m'\u001b[39m\n"
	},
	"prod-SwitchExpr": {
		"switch-004": "InvalidDocError: Unexpected doc 'undefined', \nExpected it to be 'string' or 'object'.",
		"switch-005": "InvalidDocError: Unexpected doc 'undefined', \nExpected it to be 'string' or 'object'."
	},
	"prod-UnaryLookup": {
		"UnaryLookup-044": "AssertionError [ERR_ASSERTION]: The prettification should be stable after a first one\n\u001b[32m+ actual\u001b[39m \u001b[31m- expected\u001b[39m\n\n\u001b[32m+\u001b[39m '(\\n' +\n\u001b[32m+\u001b[39m   '  map {\"a-1\": 1, \"b-1\": 2, \"c-1\": 3}, map {\"a-1\": 2, \"b-1\": 3, \"c-1\": 4}\\n' +\n\u001b[32m+\u001b[39m   ')[?(:confusing?:)\\n' +\n\u001b[32m+\u001b[39m   'b-1 eq\\n' +\n\u001b[31m-\u001b[39m '(map {\"a-1\": 1, \"b-1\": 2, \"c-1\": 3}, map {\"a-1\": 2, \"b-1\": 3, \"c-1\": 4})[?b-1 eq (:confusing?:)\\n' +\n\u001b[39m    '  3]'\n"
	},
	"prod-ValidateExpr": {
		"validate-as-101": "Error: Comment \"(:  at \"qischema001.xsd\" :)\" was not printed. Please report this error!",
		"validate-as-102": "Error: Comment \"(:  at \"qischema001.xsd\" :)\" was not printed. Please report this error!",
		"validate-as-104": "Error: Comment \"(:  at \"qischema001.xsd\" :)\" was not printed. Please report this error!",
		"validate-as-105": "Error: Comment \"(:  at \"qischema001.xsd\" :)\" was not printed. Please report this error!",
		"validate-as-91011": "Error: Comment \"(:  at \"qischema001.xsd\" :)\" was not printed. Please report this error!",
		"validate-as-91014": "Error: Comment \"(:  at \"qischema001.xsd\" :)\" was not printed. Please report this error!",
		"validate-as-91015": "Error: Comment \"(:  at \"qischema001.xsd\" :)\" was not printed. Please report this error!",
		"validate-as-91016": "Error: Comment \"(:  at \"qischema001.xsd\" :)\" was not printed. Please report this error!"
	},
	"prod-VarDecl": {
		"internalvar-2": "Error: Comment \"(::)\" was not printed. Please report this error!",
		"internalvar-1": "Error: Comment \"(::)\" was not printed. Please report this error!",
		"K-InternalVariablesWith-1": "Error: Comment \"(::)\" was not printed. Please report this error!",
		"K-InternalVariablesWith-2": "Error: Comment \"(::)\" was not printed. Please report this error!"
	},
	"prod-VersionDecl": {
		"version_declaration-001": "Error: Comment \"(:encoding \"utf-8xx\":)\" was not printed. Please report this error!"
	}
} as Record<string,Record<string,string>>;
